name: CI Pipeline

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  # code-quality:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Biome
  #       uses: biomejs/setup-biome@v2
  #       with:
  #         version: latest
  #     - name: Run Biome
  #       run: npm run lint

  # test:
  #   runs-on: ubuntu-latest
  #   needs: code-quality
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'
  #     - name: Install Dependencies
  #       run: npm ci
  #     - name: Generate Prisma Client
  #       run: npm run prisma:generate
  #     - name: Run Tests
  #       run: npm run test

  # build:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'
  #     - name: Install Dependencies
  #       run: npm ci
  #     - name: Run Build
  #       run: npm run build

  build-docker-image:
    runs-on: ubuntu-latest
    # needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_Token }}
      - name: Build Docker Image
        run: |
          docker build . --file Dockerfile --tag ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker tag ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:latest
      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}:latest

  deploy-image:
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - uses: actions/checkout@v4
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_Token }}
      - name: Remove existing Docker network
        run: docker network rm app-network || true
      - name: Copy docker-compose.yml to VPS
        run: scp -o StrictHostKeyChecking=no ./docker-compose.yml ubuntu@47.129.241.129:/home/ubuntu/docker-compose.yml
      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no -t ubuntu@47.129.241.129 << 'EOF'
          docker pull ghcr.io/${{ github.repository }}:latest
          docker network create app-network || true
          docker-compose -f /home/ubuntu/docker-compose.yml up -d --force-recreate
          EOF